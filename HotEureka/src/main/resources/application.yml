spring:
  application:
    name: test-cloud-server
  profiles: test
server:
  port: 8080
eureka:
  client:
    fetch-registry: false #服务发现，是否从Eureka中获取注册信息
    register-with-eureka: false  #服务注册，是否将自己注册到Eureka服务中
    service-url: #Eureka客户端与Eureka服务端的交互地址，高可用状态配置对方的地址，单机状态配置自己（如果不配置则默认本机8761端口）
      defaultZone: http://slave1:8080/eureka/

  instance:
    hostname: slave1
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true



---
spring:
  application:
    name: first-cloud-server
  profiles: slave1
server:
  port: 8081
eureka:
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://slave2:8082/eureka/,http://slave3:8083/eureka/

  instance:
    hostname: slave1
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true


---
spring:
  application:
    name: second-cloud-server
  profiles: slave2
server:
  port: 8082
eureka:
  instance:
    hostname: slave2
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone:  http://slave3:8083/eureka/,http://slave1:8081/eureka/

---
spring:
  application:
    name: third-cloud-server
  profiles: slave3
server:
  port: 8083
eureka:
  instance:
    hostname: slave3
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 30
    prefer-ip-address: true
  client:
    fetch-registry: true
    register-with-eureka: true
    serviceUrl:
      defaultZone:  http://slave1:8081/eureka/,http://slave2:8082/eureka/
